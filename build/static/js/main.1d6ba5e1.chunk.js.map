{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","base.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","props","history","push","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","target","updateFish","index","onChange","deleteFish","Login","authenticate","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.1d6ba5e1.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n  static propTypes = { history: PropTypes.object };\r\n\r\n  // We use a class property set to an arrow function\r\n  // As the property is bound to the instance of the class\r\n  // it will have as THIS the Class\r\n  goToStore = (e) => {\r\n    // 1. Stop the form from submitting\r\n    e.preventDefault();\r\n    // 2. Get the text from the input\r\n    const storeName = this.myInput.current.value;\r\n    // console.log(\"Going to store!\");\r\n    // console.log(this.myInput);\r\n    // 3. Change the page to store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`); // Another way to access the Router\r\n  };\r\n  // // Or use bind instead of function expression ans vector function\r\n  // // that has no own this instead.\r\n  // constructor() {\r\n  //   super();\r\n  //   this.goToStore = this.goToStore.bind(this);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please enter a store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store ➡️</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends React.Component {\r\n  static propTypes = { tagline: PropTypes.string.isRequired };\r\n  render() {\r\n    return (\r\n      <header className=\"top\">\r\n        <h1>\r\n          Catch\r\n          <span className=\"ofThe\">\r\n            <span className=\"of\">of</span>\r\n            <span className=\"the\">the</span>\r\n          </span>\r\n          Day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n          <span>{this.props.tagline}</span>\r\n          {/* <span>{this.props.age}</span>\r\n          <span>{this.props.cool}</span> */}\r\n        </h3>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\n//// Stateless functional component\r\n// const Header = ({tagline, age}) =>\r\n\r\n//     (\r\n//       <header className=\"top\">\r\n//         <h1>\r\n//           Catch\r\n//           <span className=\"ofThe\">\r\n//             <span className=\"of\">of</span>\r\n//             <span className=\"the\">the</span>\r\n//           </span>\r\n//           Day\r\n//         </h1>\r\n//         <h3 className=\"tagline\">\r\n//           <span>{tagline}</span>\r\n//           <span>{age}</span>\r\n//           {/* <span>{this.props.age}</span>\r\n//           <span>{this.props.cool}</span> */}\r\n//         </h3>\r\n//       </header>\r\n//     );\r\n\r\n// Header.propTypes = {\r\n//   tagline: PropTypes.string.isRequired,\r\n//   // age: PropTypes.number.isRequired,\r\n//   // cool: PropTypes.bool.isRequired,\r\n// };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    // Make sure the fish is loaded before we continue\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key: key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    }; // example for simplification\r\n    // Make sure the fish is loaded before we continue\r\n    if (!fish) return null; // returning null renders nothing\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>☠️</button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {\r\n            //looping trough all keys\r\n            orderIds.map((key) => {\r\n              return this.renderOrder(key);\r\n            })\r\n          }\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\n\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCXVBYuFcJn5eRLuVGynwhTJMy_pNVrJQA\",\r\n  authDomain: \"catch-of-the-day-valp.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://catch-of-the-day-valp-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    // projectId: \"catch-of-the-day-valp\",\r\n    // storageBucket: \"catch-of-the-day-valp.appspot.com\",\r\n    // messagingSenderId: \"764832281053\",\r\n    // appId: \"1:764832281053:web:69ebf70ac9fa06bfdc8634\",\r\n    // measurementId: \"G-WKXXT80CVX\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// This is a default export\r\nexport default base;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = { addFish: PropTypes.func };\r\n\r\n  createFish = (e) => {\r\n    //1. stop the form from submitting\r\n    e.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value), // price in cents -> no decimal issues\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    e.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n  };\r\n  handleChange = (e) => {\r\n    // console.log(e.target.name);\r\n    // update that fish\r\n    // 1. Take a copy of the current fish\r\n    const updatedFish = { ...this.props.fish, [e.target.name]: e.target.value };\r\n    // console.log(updatedFish);\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Login extends React.Component {\r\n  static propTypes = {\r\n    authenticate: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button\r\n          className=\"google\"\r\n          onClick={() => this.props.authenticate(\"Google\")}\r\n        >\r\n          Log In With Google\r\n        </button>\r\n        <button\r\n          className=\"github\"\r\n          onClick={() => this.props.authenticate(\"Github\")}\r\n        >\r\n          Log In With GitHub\r\n        </button>\r\n        {/* <button\r\n          className=\"twitter\"\r\n          onClick={() => this.props.authenticate(\"Twitter\")}\r\n        >\r\n          Log In With Twitter\r\n        </button> */}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\n//// Using stateless functional component - props.authenticate(\"Github\")\r\n//// No this required. props are passed as parameter!\r\n// const Login = (props) => (\r\n//   <nav className=\"login\">\r\n//     <h2>Inventory Login</h2>\r\n//     <p>Sign in to manage your store's inventory.</p>\r\n//     <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n//       Log In With GithHub\r\n//     </button>\r\n//   </nav>\r\n// );\r\n\r\n// Login.propTypes = {\r\n//   authenticate: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport base, { firebaseApp } from \"../base\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(`store: `, store);\r\n    console.log(`storeId: ${this.props.storeId}`);\r\n    // console.log(`authData: `, authData);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid,\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid,\r\n    });\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    console.log(`provider: ${provider}`);\r\n    // const authProvider = new firebase.auth.GithubAuthProvider();\r\n    // const authProvider = new firebase.auth.TwitterAuthProvider();\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    //passing authData object as promise\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then((authData) => {\r\n        console.log(\"authData: \", authData);\r\n        this.authHandler(authData);\r\n      });\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2 . Check if they are NOT the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n  };\r\n  handleClick = () => {\r\n    this.props.addToOrder(this.props.index);\r\n  };\r\n\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={this.handleClick}>\r\n          {isAvailable ? \"Add To Card\" : \"Sold Out\"}{\" \"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params: params } = this.props.match;\r\n    // first reinstate our local storage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    // console.log(JSON.parse(localStorageRef));\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) }); // see comments in Order.js\r\n    }\r\n    // persist the \"fishes: state in Firebase\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\",\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log(this.state.order);\r\n    // console.log(\"Updated\");\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes: fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1.Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update the state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes: fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1.Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Remove that key (null is used for Firebase compatibility)\r\n    fishes[key] = null;\r\n    // 3. Set that to state\r\n    this.setState({ fishes: fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    //// Equivalent to:\r\n    // if (order[key]) {\r\n    //   order[key]++;\r\n    // } else {\r\n    //   order[key] = 1;\r\n    // }\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order: order });\r\n  };\r\n\r\n  removeFromOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Remove that item from the our order\r\n    delete order[key];\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order: order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found!!!</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}